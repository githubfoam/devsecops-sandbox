execute 'log header' do
  command <<-EOF
    echo '*********'  >> #{node['log-file']['path']}
    echo 'install-gradle recipe' >> #{node['log-file']['path']}
    echo ''  >> #{node['log-file']['path']}
  EOF
end

####  Install Gradle
package %w(unzip java-1.8.0-openjdk)

remote_file '/home/vagrant/gradle-4.7-bin.zip' do
    source 'https://services.gradle.org/distributions/gradle-4.7-bin.zip'
    action :create
end

directory '/opt/gradle'

#  Unzip if the target dir has an item with the word 'gradle'
execute 'unzip gradle source' do
  command <<-EOF
    unzip -d /opt/gradle/ home/vagrant/gradle-4.7-bin.zip
  EOF
  # ignore_failure true
  # Do not do this if something with 'gradle' is found
  not_if 'ls /opt/gradle | grep gradle'
end

# execute 'log unzip gradle' do
#   command <<-EOF
#     echo 'gradle dir empty' >> #{node['log-file']['path']}
#   EOF
#   not_if 'ls /opt/gradle | grep gradle'
# end

file "/etc/profile.d/gradle.sh" do
  content "export PATH=$PATH:/opt/gradle/gradle-4.7/bin"
end

####  Install Gradle to /home/vagrant/my-project
directory '/home/vagrant/my-project'

execute 'install gradle wrapper' do
  command 'gradle wrapper'
  cwd '/home/vagrant/my-project'
  # ignore_failure true
  # Do not do this if something with 'gradle' is found
  not_if 'ls /opt/gradle | grep gradle'
end

# This appears to be needed in order to run as vagrant
# chown -r vagrant my-project

# execute 'clone train sch gradle example' do
#   command 'git clone https://github.com/linuxacademy/cicd-pipeline-train-schedule-gradle'
#   cwd '/home/vagrant'
#   not_if 'ls /home/vagrant | grep cicd-pipeline-train-schedule-gradle'
# end
# 
# directory '/home/vagrant/cicd-pipeline-train-schedule-gradle' do
#   owner 'vagrant'
#   group 'vagrant'
#   # mode '0755'
#   recursive true
# end

#####  Error Here on full run #####
# This appears to checkout the 'example-solution' branch to a branch named deploy
# git '/home/vagrant/cicd-pipeline-train-schedule-gradle' do
#   repository 'https://github.com/coateds/cicd-pipeline-train-schedule-gradle.git'
#   action :checkout
#   user 'vagrant'
#   group 'vagrant'
#   revision 'example-solution'
# end

# In my-project `gradle init` to initialize
# must logoff/logon for path
# must sudo for now `sudo su`
# adds build.gradle and settings.gradle

#   /*
#    * This file (build.gradle) was generated by the Gradle 'init' task.
#    *
#    * This is a general purpose Gradle build.
#    * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
#   
#   I can put comments here
#   
#   Here is an example of a gradle script
#   call the tasks individually
#     `./gradlew sayHello\anotherTask` or just sayHello which will run anotherTask as a dependency
#   
#   also ./gradlew nodeSetup to run a task included with moowork.node plugin
#   
#    */
#   
#   plugins {
#     id 'com.moowork.node' version '1.2.0'
#   }
#   
#   task sayHello << {
#     println 'Hello, World!'
#   }
#   
#   task anotherTask << {
#     println 'This is another task'
#   }
#   
#   sayHello.dependsOn anotherTask